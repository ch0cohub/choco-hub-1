name: Open Issue for Stale Branches

on:
  schedule:
    - cron: '0 0 * * *' # Runs daily at midnight (UTC)
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  check-stale-branches:
    if: ${{ github.repository == 'ch0cohub/choco-hub-1' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Fetch All Remote Branches
        run: git fetch --all

      - name: List Stale Remote Branches
        id: list_stale
        run: |
          # Get the current date in seconds since the Unix epoch, explicitly in UTC
          current_date=$(date -u +%s)
          echo "Current date (UTC): $current_date"

          # Initialize an empty list to store stale branches
          stale_branches=""

          # Get all remote branches with their last commit date in seconds
          for branch in $(git for-each-ref --format='%(refname:short) %(committerdate:unix)' refs/remotes/ | awk '$2 != "" {print $0}'); do
            branch_name=$(echo $branch | awk '{print $1}' | sed 's#refs/remotes/origin/##')  # Remove remote prefix
            branch_date=$(echo $branch | awk '{print $2}')
            
            # Debugging: Show the branch name and commit date
            echo "Branch: $branch_name, Commit date: $branch_date"

            # Calculate the age of the branch in seconds
            age=$((current_date - branch_date))

            # Check if the branch is older than one month (2592000 seconds)
            if [ $age -gt 2592000 ]; then
              stale_branches+="$branch_name\n"
            fi
          done

          # Set the list of stale branches as output (remove trailing newline)
          echo "::set-output name=stale_branches::$(echo -e "$stale_branches" | sed 's/\n$//')"

      - name: Open Issue for Stale Branches
        if: ${{ steps.list_stale.outputs.stale_branches != '' }}
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}  # Use GH_TOKEN for authentication
        run: |
          # If there are stale branches, create an issue
          stale_branch_list="${{ steps.list_stale.outputs.stale_branches }}"
          json_payload=$(jq -n \
            --arg title "Stale Branches Detected" \
            --arg body "The following branches have not had any commits in over a month and are considered stale:\n\n$stale_branch_list\nConsider reviewing or archiving them." \
            --argjson labels '["stale-branch"]' \
            '{title: $title, body: $body, labels: $labels}')
          
          curl -X POST -H "Authorization: token $GH_TOKEN" \
               -H "Accept: application/vnd.github.v3+json" \
               -d "$json_payload" \
               https://api.github.com/repos/${{ github.repository }}/issues
