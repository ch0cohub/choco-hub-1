name: Release Workflow

on:
  push:
    tags:
      - "v*"  # Trigger only on version tags

jobs:
  release:
    if: ${{ github.repository == 'ch0cohub/choco-hub-1' }}
    name: Create GitHub Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check if Major or Minor Version
        id: check_version
        run: |
            # Extract the current and previous tags
            current_tag=$(git describe --tags --abbrev=0)
            previous_tag=$(git describe --tags --abbrev=0 HEAD^ || echo "v0.0.0")

            # Get the major and minor versions
            current_major=$(echo $current_tag | cut -d '.' -f 1 | tr -d 'v')
            previous_major=$(echo $previous_tag | cut -d '.' -f 1 | tr -d 'v')

            current_minor=$(echo $current_tag | cut -d '.' -f 2)
            previous_minor=$(echo $previous_tag | cut -d '.' -f 2)

            # Check if the major or minor version incremented
            if [[ "$current_major" -gt "$previous_major" ]] || [[ "$current_minor" -gt "$previous_minor" ]]; then
              echo "is_release=true" >> $GITHUB_ENV
            else
              echo "is_release=false" >> $GITHUB_ENV
            fi

      - name: Stop if not Major or Minor Version
        if: env.is_release != 'true'
        run: |
          echo "This is not a major or minor version. Skipping release."
          exit 0


      - name: Generate Changelog
        id: changelog
        run: |
          # Extract the current tag
          current_tag=$(git describe --tags --abbrev=0)

          # Find the previous tag
          previous_tag=$(git describe --tags --abbrev=0 HEAD^ || echo "")

          # Generate changelog
          if [ -z "$previous_tag" ]; then
            changelog=$(git log --pretty=format:"- %s")
          else
            changelog=$(git log $previous_tag..$current_tag --pretty=format:"- %s")
          fi

          echo "Changelog:"
          echo "$changelog"

          # Save changelog for use in release
          echo "changelog=$changelog" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          body: ${{ env.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          
#Funcionamiento:
#Cada vez que se crea un tag, verifica si es un cambio major
#caso afirmativo crea una release y un changelog
