name: Codacy CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    if: ${{ github.repository == 'ch0cohub/choco-hub-1' }}
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: uvlhub_root_password
          MYSQL_DATABASE: uvlhubdb_test
          MYSQL_USER: uvlhub_user
          MYSQL_PASSWORD: uvlhub_password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Check for outdated dependencies
      run: |
        pip list --outdated > outdated_dependencies.txt

    - name: Show outdated dependencies
      run: cat outdated_dependencies.txt

    - name: Security audit with pip-audit
      run: |
        pip install pip-audit
        pip-audit || true

    - name: Run Bandit Security Audit
      run: |
        pip install bandit
        bandit -r app/

    - name: Install linting and formatting tools
      run: |
        pip install flake8 pylint mypy black isort radon pytest pytest-cov codacy-coverage

    - name: Run Flake8
      run: flake8 .

    - name: Run Pylint
      run: pylint app/

    - name: Run Mypy
      run: mypy app/

    - name: Run Black
      run: black --check .

    - name: Run isort
      run: isort --check-only .

    - name: Run Radon
      run: radon cc app/ -a

    - name: Run tests with coverage
      run: |
        coverage run -m pytest app/modules/ --ignore-glob='*selenium*'
        coverage xml 

    - name: Upload coverage to Codacy
      run: |
        python-codacy-coverage -r coverage.xml
      env:
        FLASK_ENV: testing
        MARIADB_HOSTNAME: 127.0.0.1
        MARIADB_PORT: 3306
        MARIADB_TEST_DATABASE: uvlhubdb_test
        MARIADB_USER: uvlhub_user
        MARIADB_PASSWORD: uvlhub_password
        CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}

    - name: Generate coverage report
      run: coverage report --fail-under=70 || true
